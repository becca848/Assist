package application;

import java.net.URL;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Arrays;
import java.util.Optional;
import java.util.ResourceBundle;
import application.MenuController;

import com.sun.media.jfxmedia.events.NewFrameEvent;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.SelectionMode;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.control.cell.PropertyValueFactory;

public class SelectPatientController implements Initializable {

	@FXML
	private TextField forename;

	@FXML
	private TextField surname;

	@FXML
	private Button Search;

	@FXML
	private TableView<Patient> TableView1;
	
	@FXML
	private Button selectButton;
	
	@FXML
	private MenuController menu;
	
	public Integer nhsNo = 0;
	
	private ObservableList<Patient> patients = FXCollections.observableArrayList();
	
	private static final String USER = "40062952";
	private static final String URL = "jdbc:mysql://web2.eeecs.qub.ac.uk/40062952";
	private static final String PASSWORD = "PHH5849";
	private Connection myConn;

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		
		selectButton.setOnAction( e-> selectPatient());

		TableColumn<Patient, Integer> NHSColumn = new TableColumn<>(
				"NHS Number");
		NHSColumn.setCellValueFactory(new PropertyValueFactory<>("nHSNumber"));

		TableColumn<Patient, String> ForenameColumn = new TableColumn<>(
				"Forename");
		ForenameColumn.setCellValueFactory(new PropertyValueFactory<>(
				"firstname"));

		TableColumn<Patient, String> SurnameColumn = new TableColumn<>(
				"Surname");
		SurnameColumn
				.setCellValueFactory(new PropertyValueFactory<>("surname"));

		TableColumn<Patient, Integer> YearColumn = new TableColumn<>("Year");
		YearColumn.setCellValueFactory(new PropertyValueFactory<>("Year"));

		TableColumn<Patient, Integer> StreetNumberColumn = new TableColumn<>(
				"Street Number");
		StreetNumberColumn.setCellValueFactory(new PropertyValueFactory<>(
				"streetNumber"));

		TableColumn<Patient, String> AddressColumn = new TableColumn<>(
				"Address");
		AddressColumn.setCellValueFactory(new PropertyValueFactory<>(
				"streetName"));

		TableColumn<Patient, String> PostcodeColumn = new TableColumn<>(
				"Postcode");
		PostcodeColumn.setCellValueFactory(new PropertyValueFactory<>(
				"postcode"));

		TableColumn<Patient, String> SexColumn = new TableColumn<>("Gender");
		SexColumn.setCellValueFactory(new PropertyValueFactory<>("sex"));
		
		TableView1.setItems(GetPatient());
		TableView1.getColumns().addAll(NHSColumn, ForenameColumn,
				SurnameColumn, YearColumn, StreetNumberColumn, AddressColumn,
				PostcodeColumn, SexColumn);
	}
	
	public void getDetails(MenuController menuController) {
		menu = menuController;
	}

	/**
	 public void selectPatient() {
		 ObservableList<Patient> patientSelected;
			patientSelected = TableView1.getSelectionModel().getSelectedItems();
			nhsNo = patientSelected.get(0).getNHSNumber();
			nhsNo.toString();
			System.out.println(nhsNo);
			//main.setTab2LabelText(txt1.getText());
			//menu.setPatient(nhsNo);
			//return nhsNo;
			
	}
	*/


	public ObservableList<Patient> GetPatient() {
		try {
			// get connection to the database
			myConn = DriverManager.getConnection(URL, USER, PASSWORD);

			Statement st = myConn.createStatement();
			String recivePatientdetails = "SELECT * FROM Patient";
			ResultSet rs = st.executeQuery(recivePatientdetails);

			while (rs.next()) {
				int NHSNumber = rs.getInt("NHSNumber");
				String Forename = rs.getString("Forename");
				String Surname = rs.getString("Surname");
				int DOB = rs.getInt("DOB");
				int StreetNumber = rs.getInt("StreetNumber");
				String Address = rs.getString("Address");
				String Postcode = rs.getString("Postcode");
				String Sex = rs.getString("Sex");
				patients.add(new Patient(NHSNumber, Forename, Surname, DOB,
						StreetNumber, Address, Postcode, Sex));
			}

		} catch (Exception exc) {
			exc.printStackTrace();
		}
		return patients;
	}
	
	@FXML
	public void HandleSearch() {
		SearchPatient();
	}
	
	public  ObservableList<Patient> SearchPatient(){
		try {
			// get connection to the database
			myConn = DriverManager.getConnection(URL, USER, PASSWORD);

			Statement st = myConn.createStatement();
			String recivePatientdetails = "SELECT * FROM Patient";
			ResultSet rs = st.executeQuery(recivePatientdetails);
			
			patients.clear();

			while (rs.next()) {
				int NHSNumber = rs.getInt("NHSNumber");
				String Forename = rs.getString("Forename");
				String Surname = rs.getString("Surname");
				int DOB = rs.getInt("DOB");
				int StreetNumber = rs.getInt("StreetNumber");
				String Address = rs.getString("Address");
				String Postcode = rs.getString("Postcode");
				String Sex = rs.getString("Sex");
				
				String firstname = forename.getText();
				String LastName = surname.getText();
				
				if ((firstname.contains(Forename)) || (LastName.contains(Surname)))
				patients.add(new Patient(NHSNumber, Forename, Surname, DOB,
						StreetNumber, Address, Postcode, Sex));
			}

		} catch (Exception exc) {
			exc.printStackTrace();
		}
		return patients;
	}

}
